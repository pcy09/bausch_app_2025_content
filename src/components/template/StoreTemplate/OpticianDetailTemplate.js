import { Buttons, CardContainer, ColGrid, DividingLine, Form, Inputs, Radios, RowGrid, SelectBox, Tables } from '@/components/atom';
import { Button, Descriptions, Radio } from 'antd';
import { Controller, useForm } from 'react-hook-form';
import { contentsContainerStyle, descStyle, marginLeftStyle, marginRightStyle } from '@/styles/components/atomCommonStyle';
import { css } from '@emotion/react';
import { useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { useRouter } from 'next/router';
import { getOpticianDetailAction, getOpticianListAction, opticianReset, updateOpticianAction } from '@/store/reducers/admin/opticianReducer';
import { storeMaping } from '@/common/utiles';
import { DetailPageTitle, PageTitle } from '@/components/molecules';
import NoticeLabel from '@/components/atom/Notice';
import OpticianDetailListTemplate from './OpticianDetailListTemplate';
import { OpticianStatus } from '@/components/atom/TableAtoms';

const columns = [
  {
    title: 'Ïä§ÌÜ†Ïñ¥ ÏΩîÎìú',
    dataIndex: 'data1',
    align: 'center',
  },
  {
    title: 'Ïä§ÌÜ†Ïñ¥ Î™Ö',
    dataIndex: 'data2',
    align: 'center',
  },
  {
    title: 'Ïã†Ï≤≠Ïùº',
    dataIndex: 'data3',
    align: 'center',
  },
  {
    title: 'ÏÉÅÌÉú',
    dataIndex: 'data4',
    align: 'center',
    render: value => <OpticianStatus value={value} options={showStatusOptions} />,
  },
];
const showStatusOptions = [
  { label: 'Ïû¨ÏßÅ', value: 'work' },
  { label: 'Ìá¥ÏßÅ', value: 'retire' },
];
const OpticianDetailTemplate = () => {
  const dispatch = useDispatch();
  const { opticianDetail } = useSelector(state => state?.optician);
  console.log('opticianDetail', opticianDetail);
  const storeGroupOptions = opticianDetail?.fsSaleItem?.split(',') || [];
  const defaultStoreGroup = storeGroupOptions.shift();
  const { paging } = useSelector(state => state.optician);
  const opticianList = [
    {
      data1: '123123123',
      data2: 'Î∞îÏäàÎ°¨ ÏÑ±ÎÇ®',
      data3: '2024-09-11',
      data4: 'work',
      key: 111,
    },
    {
      data1: '22222222',
      data2: 'Îã§ÎπÑÏπò ÏÑ±ÎÇ®',
      data3: '2024-09-11',
      data4: 'retire',
      key: 222,
    },
    {
      data1: '33333333',
      data2: 'Îã§ÎπÑÏπò Í∞ïÎÇ®',
      data3: '2024-09-11',
      data4: 'work',
      key: 333,
    },
  ];

  // ÏòàÏãúÎ•º ÏúÑÌïú Ï£ºÏÜå
  const router = useRouter();
  const {
    handleSubmit,
    control,
    setValue,
    formState: { errors },
  } = useForm({});
  const { query, back, push } = useRouter();

  // TODO: ÏûÑÏãú Îç∞Ïù¥ÌÑ∞ ÎßàÏù¥Í∑∏Î†àÏù¥ÏÖò Ïù¥ÌõÑ Î≥ÄÍ≤Ω ÏòàÏ†ï
  const optionChannelData = [opticianDetail]?.reduce((acc, cur) => {
    if (cur) {
      return acc.concat({
        label: storeMaping(cur.fsStoreChannel),
        id: cur.fiStoreID,
        value: cur.fsStoreChannel,
      });
    }
  }, []);

  const onSubmit = data => handleSendData(data);
  const onError = errors => console.log('fail', errors);

  const handleSendData = data => {
    dispatch(updateOpticianAction({ id: router.query.id, sendObject: data }));
  };

  useEffect(() => {
    if (!opticianList.length) {
      dispatch(getOpticianListAction());
    }
  }, [dispatch, opticianList.length]);

  // ÏÉÅÏÑ∏ Îç∞Ïù¥ÌÑ∞ Ìò∏Ï∂ú
  useEffect(() => {
    if (router.query.id) {
      dispatch(getOpticianDetailAction({ id: router.query.id, callback: router }));
    }
    return () => {
      dispatch(opticianReset());
    };
  }, [router.query.id]);

  useEffect(() => {
    if (opticianDetail) {
      setValue('store_show_status', opticianDetail?.store_show_status);
      setValue('store_channel', opticianDetail?.fsStoreChannel);
      setValue('terms_type', opticianDetail.fcWebOrder);
    }
  }, [opticianDetail]);

  return (
    <>
      <div css={descStyle}>
        <NoticeLabel title={'üëâüèºÎ∞îÏäàÎ°¨Ïùò Ï†úÌíàÏùÑ Ï∑®Í∏âÌïòÎäî Ïä§ÌÜ†Ïñ¥Ïùò ÏïàÍ≤ΩÏÇ¨ Îì±Î°ù ÌéòÏù¥ÏßÄÏûÖÎãàÎã§.'} />
      </div>
      <DividingLine border={false} />
      <Form onSubmit={handleSubmit(onSubmit, onError)}>
        <CardContainer>
          <Descriptions title="Ïä§ÌÜ†Ïñ¥ Ï†ïÎ≥¥" bordered column={3}>
            <Descriptions.Item label="Ïä§ÌÜ†Ïñ¥ Í∑∏Î£πÎ™Ö">
              <Descriptions.Item rules={[{ required: true, message: 'Ïä§ÌÜ†Ïñ¥ Í∑∏Î£πÎ™ÖÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.' }]}>
                <Inputs placeholder="Ïä§ÌÜ†Ïñ¥ Í∑∏Î£πÎ™ÖÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî." />
              </Descriptions.Item>
            </Descriptions.Item>
            <Descriptions.Item>
              <Button type="primary" htmlType="submit">
                ÏΩîÎìúÌôïÏù∏
              </Button>
            </Descriptions.Item>
            <Descriptions.Item label="Ïä§ÌÜ†Ïñ¥ Î™Ö">
              <Inputs placeholder="ÏΩîÎìú ÌôïÏù∏ Ïãú ÏûêÎèôÏûÖÎ†•." />
            </Descriptions.Item>
          </Descriptions>
          <DividingLine border={false} />
          <Descriptions title="Í∏∞Î≥∏ Ï†ïÎ≥¥" bordered={true}>
            <Descriptions.Item label="Ïù¥Î¶Ñ" rules={[{ required: true, message: 'Ïä§ÌÜ†Ïñ¥ Í∑∏Î£πÎ™ÖÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.' }]}>
              <Inputs placeholder="Ïù¥Î¶ÑÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî." />
            </Descriptions.Item>
            <Descriptions.Item span={2} label="Ï†ÑÌôîÎ≤àÌò∏">
              <Inputs placeholder="Ï†ÑÌôîÎ≤àÌò∏Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî." />
            </Descriptions.Item>
            <Descriptions.Item span={1} label="Ïù¥Î©îÏùº">
              <Inputs placeholder="Ïù¥Î©îÏùºÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî." />
            </Descriptions.Item>
            <Descriptions.Item span={2} label="ÏÉÅÌÉú">
              <Controller
                name="terms_type"
                control={control}
                defaultValue={opticianDetail?.fcWebOrder === 'Y' ? 'Y' : 'N'}
                render={({ field: { ref, value, ...rest }, fieldState }) => (
                  <Radio.Group
                    options={[
                      { label: 'Ïû¨ÏßÅ', value: 'Y' },
                      { label: 'Ìá¥ÏßÅ', value: 'N' },
                    ]}
                    value={value}
                    {...rest}
                  />
                )}
                rules={{ required: true }}
              />
            </Descriptions.Item>
          </Descriptions>
        </CardContainer>
      </Form>
      <DividingLine border={false} />
      <CardContainer>
        <Descriptions title="Ïù¥Î†• Í¥ÄÎ¶¨" />
        <Tables columns={columns} listData={opticianList} />
      </CardContainer>
      <DividingLine border={false} />
      <CardContainer>
        <RowGrid>
          <ColGrid span={24} css={buttonRowStyle}>
            <div>
              <Buttons
                type={'default'}
                name={'Ïù¥Ï†Ñ'}
                htmlType={'button'}
                onClick={() => router.push('/admin/optician/administration')}
                css={marginRightStyle(5)}
              />
              <Buttons
                type={'default'}
                name={'ÏÇ≠Ï†ú'}
                htmlType={'button'}
                onClick={() => router.push('/admin/optician/administration')} //ÏÇ≠Ï†ú API Ïó∞Í≤∞ Î∞è ÏàòÏ†ï
                css={marginRightStyle(5)}
              />
            </div>
            <Buttons type={'primary'} name={'ÏàòÏ†ïÌïòÍ∏∞'} htmlType={'submit'} css={marginLeftStyle(5)} />
          </ColGrid>
        </RowGrid>
      </CardContainer>
      {/*</CardContainer>*/}
      <DividingLine border={false} />
    </>
  );
};

export default OpticianDetailTemplate;

const buttonRowStyle = css`
  display: flex;
  justify-content: space-between;
  align-items: center;
`;
