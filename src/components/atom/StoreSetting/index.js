import { useDispatch, useSelector } from 'react-redux';
import Portal from '@/components/atom/Portal';
import { Modal, Tabs } from 'antd';
import { closeStore } from '@/store/reducers/admin/storeSettingReducer';
import NoticeLabel from '../Notice';
import DividingLine from '../DividingLine';
import { StoreAddExcelFormSection, StoreAddSearchFormSection, StoreDeleteExcelFormSection } from '@/components/molecules';

// Ïä§ÌÜ†Ïñ¥ Î¶¨Ïä§Ìä∏ ÎçîÎØ∏
const store_list_dummy = [];
for (let i = 0; i < 100; i++) {
  store_list_dummy.push({
    key: i,
    store_group: 'Îã§ÎπÑÏπò',
    store_name: `ÏïÑÏù¥Ï¢ãÏùÄÎÇòÎùº${i}`,
    store_code: '708997',
    store_order: 'YES',
    store_abc: 'CM',
    store_location: 'Í≤ΩÍ∏∞ÎèÑ',
    store_address: 'Îã§ÏÇ∞Îèô',
    store_date: '2018-3-24',
  });
}

// ÏπºÎüº
const columns = [
  {
    title: 'Ïä§ÌÜ†Ïñ¥ ÏΩîÎìú',
    dataIndex: 'store_code',
    align: 'center',
  },
  {
    title: 'Ïä§ÌÜ†Ïñ¥Î™Ö',
    dataIndex: 'store_name',
    align: 'center',
    width: 150,
  },
  {
    title: 'Ïä§ÌÜ†Ïñ¥ Í∑∏Î£π',
    dataIndex: 'store_group',
    align: 'center',
  },
  {
    title: 'ABC S/M',
    dataIndex: 'store_abc',
    align: 'center',
  },
  {
    title: 'ÏûêÎèôÎ∞úÏ£º',
    dataIndex: 'store_order',
    align: 'center',
    width: 70,
  },
  {
    title: 'ÏßÄÏó≠(Ïãú/ÎèÑ)',
    dataIndex: 'store_location',
    align: 'center',
    width: 100,
  },
  {
    title: 'Ï£ºÏÜå(Íµ¨/Íµ∞/Îèô)',
    dataIndex: 'store_address',
    align: 'center',
    width: 100,
  },
  {
    title: 'Îì±Î°ùÏùº',
    dataIndex: 'store_date',
    align: 'center',
  },
];

const StoreSetting = () => {
  // **********************Í≥µÌÜµ
  const show = useSelector(state => state?.storeSetting?.show);
  const dispatch = useDispatch();

  // ÏóêÎü¨
  const handleError = errors => {
    console.log(errors);
  };

  // Ï∑®ÏÜå
  const handleModalCancel = () => {
    dispatch(closeStore());
  };

  // ÌÉ≠ Î©îÎâ¥ Î≥ÄÍ≤Ω
  const handleChangeTabMenu = (key, e) => {
    console.log(key);
  };

  // ÌÉ≠ Î©îÎâ¥ Î∞∞Ïó¥ ÎßåÎì§Í∏∞
  const tabMenuList = () => {
    return [
      {
        label: 'Ïä§ÌÜ†Ïñ¥ Ï∂îÍ∞Ä (excel)',
        key: 'A',
        children: (
          <StoreAddExcelFormSection handleError={handleError} handleCancel={handleModalCancel} listData={store_list_dummy} columns={columns} />
        ),
      },
      {
        label: 'Ïä§ÌÜ†Ïñ¥ Ï∂îÍ∞Ä (Í≤ÄÏÉâ)',
        key: 'B',
        children: (
          <StoreAddSearchFormSection handleError={handleError} handleCancel={handleModalCancel} listData={store_list_dummy} columns={columns} />
        ),
      },
      {
        label: 'Ïä§ÌÜ†Ïñ¥ Ï†úÏô∏ (excel)',
        key: 'C',
        children: (
          <StoreDeleteExcelFormSection handleError={handleError} handleCancel={handleModalCancel} listData={store_list_dummy} columns={columns} />
        ),
      },
    ];
  };
  return (
    <>
      {show && (
        <Portal selector={'modal-root'}>
          <Modal footer={false} title="ÎåÄÏÉÅ Ïä§ÌÜ†Ïñ¥ ÏÑ§Ï†ï" centered open={show} onCancel={handleModalCancel} width={1000}>
            <NoticeLabel title={'üëâüèºÎåÄÏÉÅ Ïä§ÌÜ†Ïñ¥Î•º Îì±Î°ùÌï¥Ï£ºÏÑ∏Ïöî. ÌååÏùº ÏóÖÎ°úÎìú ÎòêÎäî Í≤ÄÏÉâÏùÑ ÌÜµÌï¥ Îì±Î°ùÌï† Ïàò ÏûàÏäµÎãàÎã§. '} />
            <DividingLine border={false} />
            <Tabs
              onTabClick={(key, e) => handleChangeTabMenu(key, e)}
              defaultActiveKey={'A'}
              type="line"
              centered
              size={'small'}
              items={tabMenuList()}
            />
          </Modal>
        </Portal>
      )}
    </>
  );
};
export default StoreSetting;
