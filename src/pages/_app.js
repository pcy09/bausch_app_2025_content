import { memo, useEffect, useState } from 'react';
import Head from 'next/head';
import Script from 'next/script';
// Styles
import '@/styles/reset.css';
import '@/styles/Fonts/Font.css';
// import '@/styles/antdCustomStyle.css';
import '@/styles/globals.css';
// Redux
import { reduxWrapper } from '@/store/store';
import ModalAtom from '@/components/atom/ModalAtom';
import Loading from '@/components/atom/Loading';
import { CouponChangeModal, ProductChangeModal, StoreSetting } from '@/components/atom';
import ModalDrawer from '@/components/molecules/ModalDrawer';
import PopupAtom from '@/components/atom/PopupAtom';
import Popup from '@/components/atom/Popup';
import { ProductChangeModalBox } from '@/components/molecules';
import { PointProductChangeModal } from '@/components/molecules/ModalBox';

function MyApp({ Component, pageProps }) {
  const kakaoApiKey = process.env.NEXT_PUBLIC_KAKAO_API_KEY;

  const getLayout = Component.getLayout ?? (page => page);

  const [mob, setMob] = useState(false);
  const handleResize = () => {
    if (window.innerWidth < 426) {
      setMob(true);
    } else {
      setMob(false);
    }
  };
  useEffect(() => {
    handleResize();
    window.addEventListener('resize', handleResize);
    return () => {
      window.removeEventListener('resize', handleResize);
    };
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        {/* 서버 cors 에러 방지용 */}
        <meta name="referrer" content="no-referrer-when-downgrade" />
        <meta name="referrer" content="strict-origin-when-cross-origin" />
        {/* 검색엔진 크롤링 방지 */}
        <meta name="robots" content="noindex, nofollow" />
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        {/* 일반 */}
        {!mob && <meta name="viewport" content="width=device-width, initial-scale=1" />}
        {/* 스케일다운 */}
        {mob && <meta name="viewport" content="user-scalable=0, width=425" />}
        <script src={`//dapi.kakao.com/v2/maps/sdk.js?appkey=${kakaoApiKey}&libraries=services,clusterer,drawing`} strategy="beforeInteractive" />
        <script src={`//dapi.kakao.com/v2/maps/sdk.js?appkey=${kakaoApiKey}&libraries=services`} strategy="beforeInteractive" />
      </Head>
      {getLayout(<Component {...pageProps} />)}
      <ModalAtom />
      <Loading />
      <ModalDrawer />
      <PopupAtom />
      <StoreSetting />
      <ProductChangeModal />
      {/* <CouponChangeModal /> */}

      {/* 주문 > 쿠폰 거래 내역 > 상세 > 제품 변경팝업 */}
      <ProductChangeModalBox />

      {/* 주문 > 적립금 제품 주문 내역 > 상세 > 제품 변경팝업 */}
      <PointProductChangeModal />
      <Popup />
    </>
  );
}

export default reduxWrapper.withRedux(memo(MyApp));
